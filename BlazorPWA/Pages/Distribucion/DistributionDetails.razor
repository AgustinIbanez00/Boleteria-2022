@inject IDistribucionService DistribucionService
@inject DialogService DialogService

@if (distribucion != null)
{

    <h4 class="mb-4">@distribucion.Nota</h4>


    <RadzenSwitch @bind-Value=@distribucion.UnPiso Disabled="true" />

    <RadzenTabs TabPosition="TabPosition.Top" RenderMode="TabRenderMode.Client">
        <Tabs>
            <RadzenTabsItem Text="Planta Baja">
                <PlantaBus Filas=@distribucion.Filas Planta=@Planta.BAJA />
            </RadzenTabsItem>
            @if (!distribucion.UnPiso)
            {
                <RadzenTabsItem Text="Planta Alta">
                    <PlantaBus Filas=@distribucion.Filas Planta=@Planta.ALTA />
                </RadzenTabsItem>
            }
        </Tabs>
    </RadzenTabs>

    <div class="row mt-4">
        <div class="col">
            <RadzenButton Text="Refresh" Click=@(args => GuardarCambios()) ButtonStyle="ButtonStyle.Light" Class="mr-1 float-right" />
        </div>
    </div>


}

@code {

    [Parameter]
    public int Id { get; set; }

    DistribucionResponse distribucion { get; set; }

    async Task GuardarCambios()
    {
        List<FilaUpdateRequest> filaUpdateRequests = new();
        DistribucionUpdateRequest request = new() { Id = distribucion.Id, Nota = distribucion.Nota, UnPiso = distribucion.UnPiso, Filas = filaUpdateRequests };
        foreach (var fila in distribucion.Filas)
        {
            List<CeldaUpdateRequest> celdas = new List<CeldaUpdateRequest>();
            foreach (var celda in fila.Cells)
            {
                celdas.Add(new CeldaUpdateRequest() { Id = celda.Id, Value = celda.Value });
            }

            filaUpdateRequests.Add(new FilaUpdateRequest() { Id = fila.Id, Planta = fila.Planta, Cells = celdas });
        }
        await DistribucionService.UpdateDistribucionAsync(request);

        await ReloadDistribution();
    }

    async Task ReloadDistribution()
    {
        var response = await DistribucionService.GetDistribucionAsync(Id);

        if (response.Success)
        {
            distribucion = response.Result;
        }
        else
            Console.WriteLine(response.Message);
    }

    protected override async Task OnInitializedAsync()
    {
        await ReloadDistribution();
    }

}
